//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TALearningSystemWebAndLoadTest
{
    using System;
    using System.Collections.Generic;
    using System.Text;
    using Microsoft.VisualStudio.TestTools.WebTesting;
    using Microsoft.VisualStudio.TestTools.WebTesting.Rules;


    [DeploymentItem("talearningsystemwebandloadtest\\PTData.csv")]
    [DataSource("DataSource1", "Microsoft.VisualStudio.TestTools.DataSource.CSV", "|DataDirectory|\\PTData.csv", Microsoft.VisualStudio.TestTools.WebTesting.DataBindingAccessMethod.Sequential, Microsoft.VisualStudio.TestTools.WebTesting.DataBindingSelectColumns.SelectOnlyBoundColumns, "PTData#csv")]
    [DataBinding("DataSource1", "PTData#csv", "User", "DataSource1.PTData#csv.User")]
    [DataBinding("DataSource1", "PTData#csv", "FirstCourse", "DataSource1.PTData#csv.FirstCourse")]
    [DataBinding("DataSource1", "PTData#csv", "SecondCourse", "DataSource1.PTData#csv.SecondCourse")]
    [DataBinding("DataSource1", "PTData#csv", "ThirdCourse", "DataSource1.PTData#csv.ThirdCourse")]
    public class NavigateInMyCoursesCoded : WebTest
    {
        

        public NavigateInMyCoursesCoded()
        {
            this.Context.Add("StageEnv", "http://stage.telerikacademy.com");
            this.PreAuthenticate = true;
            this.Proxy = "default";
        }

        public override IEnumerator<WebTestRequest> GetRequestEnumerator()
        {
            // Initialize validation rules that apply to all requests in the WebTest
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidateResponseUrl validationRule1 = new ValidateResponseUrl();
                this.ValidateResponse += new EventHandler<ValidationEventArgs>(validationRule1.Validate);
            }
            if ((this.Context.ValidationLevel >= Microsoft.VisualStudio.TestTools.WebTesting.ValidationLevel.Low))
            {
                ValidationRuleResponseTimeGoal validationRule2 = new ValidationRuleResponseTimeGoal();
                validationRule2.Tolerance = 0D;
                this.ValidateResponseOnPageComplete += new EventHandler<ValidationEventArgs>(validationRule2.Validate);
            }

            WebTestRequest request1 = new WebTestRequest((this.Context["StageEnv"].ToString() + "/"));
            yield return request1;
            request1 = null;

            WebTestRequest request2 = new WebTestRequest((this.Context["StageEnv"].ToString() + "/Users/Auth/Login"));
            request2.ThinkTime = 1;
            request2.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["StageEnv"].ToString() + "/")));
            yield return request2;
            request2 = null;

            WebTestRequest request3 = new WebTestRequest((this.Context["StageEnv"].ToString() + "/Users/Auth/Login"));
            request3.Method = "POST";
            request3.ExpectedResponseUrl = (this.Context["StageEnv"].ToString() + "/");
            request3.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["StageEnv"].ToString() + "/Users/Auth/Login")));
            FormPostHttpBody request3Body = new FormPostHttpBody();
            request3Body.FormPostParameters.Add("UsernameOrEmail", this.Context["DataSource1.PTData#csv.User"].ToString());
            request3Body.FormPostParameters.Add("Password", "123456");
            request3.Body = request3Body;
            yield return request3;
            request3 = null;

            WebTestRequest request4 = new WebTestRequest(this.Context["DataSource1.PTData#csv.FirstCourse"].ToString());
            request4.ThinkTime = 1;
            request4.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["StageEnv"].ToString() + "/")));
            WebTestRequest request4Dependent1 = new WebTestRequest(this.Context["DataSource1.PTData#csv.FirstCourse"].ToString());
            request4Dependent1.ThinkTime = 3;
            request4Dependent1.ParseDependentRequests = false;
            request4Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request4Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request4Dependent1.Headers.Add(new WebTestRequestHeader("Referer", this.Context["DataSource1.PTData#csv.FirstCourse"].ToString()));
            request4.DependentRequests.Add(request4Dependent1);
            yield return request4;
            request4 = null;

            WebTestRequest request5 = new WebTestRequest(this.Context["DataSource1.PTData#csv.SecondCourse"].ToString());
            request5.ParseDependentRequests = false;
            request5.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["StageEnv"].ToString() + "/Courses/Courses/Details/250")));
            WebTestRequest request5Dependent1 = new WebTestRequest(this.Context["DataSource1.PTData#csv.SecondCourse"].ToString());
            request5Dependent1.ThinkTime = 3;
            request5Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request5Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request5Dependent1.Headers.Add(new WebTestRequestHeader("Referer", this.Context["DataSource1.PTData#csv.SecondCourse"].ToString()));
            request5.DependentRequests.Add(request5Dependent1);
            yield return request5;
            request5 = null;

            WebTestRequest request6 = new WebTestRequest(this.Context["DataSource1.PTData#csv.ThirdCourse"].ToString());
            request6.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["StageEnv"].ToString() + "/Courses/Courses/Details/270")));
            WebTestRequest request6Dependent1 = new WebTestRequest(this.Context["DataSource1.PTData#csv.ThirdCourse"].ToString());
            request6Dependent1.ThinkTime = 3;
            request6Dependent1.Headers.Add(new WebTestRequestHeader("Accept", "*/*"));
            request6Dependent1.Headers.Add(new WebTestRequestHeader("X-Requested-With", "XMLHttpRequest"));
            request6Dependent1.Headers.Add(new WebTestRequestHeader("Referer", this.Context["DataSource1.PTData#csv.ThirdCourse"].ToString()));
            request6.DependentRequests.Add(request6Dependent1);
            yield return request6;
            request6 = null;

            WebTestRequest request7 = new WebTestRequest((this.Context["StageEnv"].ToString() + "/Users/Auth/LogOut"));
            request7.ThinkTime = 1;
            request7.ExpectedResponseUrl = (this.Context["StageEnv"].ToString() + "/");
            request7.Headers.Add(new WebTestRequestHeader("Referer", (this.Context["StageEnv"].ToString() + "/Courses/Courses/Details/276")));
            yield return request7;
            request7 = null;
        }
    }
}
